#!/bin/bash
# XMonad startup script with automatic monitor detection

# Ensure user bin is in PATH for dmenu
export PATH="$HOME/bin:$PATH"

# Load Xresources
[ -f ~/.Xresources ] && xrdb -merge ~/.Xresources

# Set keyboard options
setxkbmap -option ctrl:nocaps

# Enable NumLock by default
if command -v numlockx > /dev/null 2>&1; then
    numlockx on
elif command -v setleds > /dev/null 2>&1; then
    # Fallback: try setleds for console (may not work in X)
    setleds -D +num 2>/dev/null || true
    # Also try xset if available
    if command -v xset > /dev/null 2>&1; then
        xset led named "Num Lock" 2>/dev/null || xset led 1 2>/dev/null || true
    fi
fi

# Detect and configure monitors
# First, explicitly detect and enable all connected displays
if command -v xrandr > /dev/null 2>&1; then
    # Get connected displays
    LAPTOP_DISPLAY=$(xrandr --query | grep -E "^(eDP|LVDS)" | grep " connected" | cut -d" " -f1 | head -1)
    EXTERNAL_DISPLAY=$(xrandr --query | grep -E "^(HDMI|DP|VGA)" | grep " connected" | cut -d" " -f1 | head -1)
    
    if [ -n "$EXTERNAL_DISPLAY" ]; then
        echo "External display detected: $EXTERNAL_DISPLAY" >> /tmp/xmonad-start.log
        # Enable external display as primary with auto resolution
        xrandr --output "$EXTERNAL_DISPLAY" --auto --primary
        
        if [ -n "$LAPTOP_DISPLAY" ]; then
            # Position laptop display to the right of external
            xrandr --output "$LAPTOP_DISPLAY" --auto --right-of "$EXTERNAL_DISPLAY"
        fi
    elif [ -n "$LAPTOP_DISPLAY" ]; then
        echo "Laptop display only: $LAPTOP_DISPLAY" >> /tmp/xmonad-start.log
        xrandr --output "$LAPTOP_DISPLAY" --auto --primary
    fi
fi

# Then use autorandr if available for profile management
if command -v autorandr > /dev/null 2>&1; then
    # Try to load a saved profile that matches current hardware
    autorandr --change || echo "No matching autorandr profile found" >> /tmp/xmonad-start.log
fi

# Apply saved theme to ensure transparency is initialized
if [ -f "$HOME/.config/xmonad/themes/current" ]; then
    CURRENT_THEME=$(cat "$HOME/.config/xmonad/themes/current")
    if [ -n "$CURRENT_THEME" ]; then
        "$HOME/.config/xmonad/theme-switcher/apply-theme.sh" "$CURRENT_THEME" &
    fi
fi

# Set compositor for transparency
if command -v picom > /dev/null 2>&1; then
    picom -b --config ~/.config/picom/picom.conf 2>/dev/null || picom -b
elif command -v compton > /dev/null 2>&1; then
    compton -b
fi

# Configure GNOME screensaver for security compliance (10 min timeout)
gsettings set org.gnome.desktop.session idle-delay 600 2>/dev/null
gsettings set org.gnome.desktop.screensaver idle-activation-enabled true 2>/dev/null
gsettings set org.gnome.desktop.screensaver lock-enabled true 2>/dev/null
gsettings set org.gnome.desktop.screensaver lock-delay 0 2>/dev/null

# Note: Using GNOME's native screensaver instead of xautolock for better compatibility

# Start system tray
stalonetray &

# Start network manager applet
nm-applet --indicator &

# Start volume control (pasystray for PulseAudio)
# Set GTK theme for proper icon display
GTK_THEME=Adwaita XDG_CURRENT_DESKTOP=GNOME pasystray &

# Start Bluetooth manager
blueman-applet &

# Start XMonad
exec xmonad